// #include <stdio.h>
// #include <iostream>
// #define SIZE 10

// int main()
// {
//     int* ptr = (int*) malloc(SIZE);
//     // for(int i = 0; i < SIZE; i++)
//     // {
//     //     ptr[i] = SIZE;
//     // }

//     int abrt;

//     if(1)
//     {
//         abrt = 1;
//         free(ptr);
//     }

//     if(abrt)
//     {
//         std::cout << "operation aborted before commit: " << ptr << '\n';
//     }

//     return 0;
// }

#include <stdio.h>
#include <unistd.h>
#include <iostream>
#include <cstdlib>
#include <cstring>
#define BUFSIZER1 512
#define BUFSIZER2 ((BUFSIZER1/2) - 8)

int main(int argc, char **argv) {
    char *buf1R1;
    char *buf2R1;
    char *buf2R2;
    char *buf3R2;
    buf1R1 = (char *) malloc(BUFSIZER1);
    buf2R1 = (char *) malloc(BUFSIZER1);
    free(buf2R1);
    buf2R2 = (char *) malloc(BUFSIZER2);
    buf3R2 = (char *) malloc(BUFSIZER2);
    strncpy(buf2R1, argv[1], BUFSIZER1-1);
    std::cout << buf2R1 << '\n';
    free(buf1R1);
    free(buf2R2);
    free(buf3R2);
}